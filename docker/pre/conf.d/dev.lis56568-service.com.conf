gzip on;
gzip_disable "msie6";
gzip_vary on;
gzip_proxied any;
gzip_comp_level 6;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_min_length 256;
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

client_body_buffer_size 200;
client_max_body_size 200m;

fastcgi_buffers 16 16k;
fastcgi_buffer_size 32k;

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream swoole{
    server laravel:9000;
}

#server {
#    listen 80;
#    listen [::]:80;
#    server_name dev.lis56568-service.com;
#    return 301 https://$server_name$request_uri;
#}

server {

    listen 80;
    listen [::]:80;
    #listen 443 ssl http2;
    #listen [::]:443 ssl http2;

    server_name dev.lis56568-service.com;

   # ssl_certificate /etc/nginx/cert/lis56568-service/fullchain.pem;
   # ssl_certificate_key /etc/nginx/cert/lis56568-service/key.pem;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    root /var/www/html/public;

    index index.php;

    charset utf-8;
    server_tokens off;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    location /index.php {
        try_files /not_exists @octane;
    }

    location / {
        try_files $uri $uri/ @octane;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location @octane {
        set $suffix "";

        if ($uri = /index.php) {
            set $suffix "/";
        }
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # IF https
        proxy_set_header HTTPS "on";

        charset utf-8;

        proxy_pass http://swoole$suffix;
    }
}
